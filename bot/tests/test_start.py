import pytest
from bot.commands.start import cmd_start
from unittest.mock import AsyncMock
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.base import StorageKey
from bot.keyboards.inline_keyboards.inline_keyboards import inline_registration
from .utils import TEST_USER, TEST_USER_CHAT
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


@pytest.mark.asyncio
async def message_state(storage, bot):
    message = AsyncMock()
    state = FSMContext(
        storage=storage,
        key=StorageKey(bot_id=bot.id, user_id=TEST_USER.id, chat_id=TEST_USER_CHAT.id)
    )
    return message, state

@pytest.mark.asyncio
async def test_start_hendler(storage, bot):
    message, state = await message_state(storage, bot)
    await cmd_start(message, state)
    message.answer.assert_called_with("""
–î—Ä—É–≥, Sina Coffee –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è!üß°

–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã
—Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –≤—ã–ø–∏—Ç—ã—Ö
—Å—Ç–∞–∫–∞–Ω—á–∏–∫–æ–≤. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –∏ –±—É–¥—å—Ç–µ
–≤—Å–µ–≥–¥–∞ –≤ –∫—É—Ä—Å–µ –≤–∞—à–∏—Ö –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö
–Ω–∞–ø–∏—Ç–∫–æ–≤ –∏ –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –∞–∫—Ü–∏–π!

–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –°–∏—Å—Ç–µ–º–µ –î—Ä—É–∂–±—ã,
–Ω—É–∂–Ω–æ —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–≤—É—é –ø–æ–∫—É–ø–∫—É –≤ –Ω–∞—à–µ–π –∫–æ—Ñ–µ–π–Ω–µ –ø–æ –∞–¥—Ä–µ—Å—É:
üìç—É–ª. –ê–π–±–µ–∫–∞ 4–ê, –æ—Ä–∏–µ–Ω—Ç–∏—Ä: –º–µ—Ç—Ä–æ –ê–π–±–µ–∫

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å
—Å–≤—è–∑—å, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º
—Ç–µ–ª–µ—Ñ–æ–Ω–∞, —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤
–∫–æ—Ñ–µ–π–Ω–µ.
                             """, reply_markup=inline_registration)


@pytest.mark.asyncio
async def test_inline_keyboard(storage, bot):
    message, state = await message_state(storage, bot)
    expected_markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", callback_data='{"name": "send_phone"}')],
        [InlineKeyboardButton(text="–í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é", callback_data='{"name": "enter_phone_manual"}')],
        [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data='_cancel')]
    ])

    await cmd_start(message, state)
    _, kwargs = message.answer.call_args
    actual_markup = kwargs['reply_markup']

    assert actual_markup == expected_markup
